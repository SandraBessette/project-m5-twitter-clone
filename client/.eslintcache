[{"C:\\Users\\Roger\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\App.js":"1","C:\\Users\\Roger\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\index.js":"2","C:\\Users\\Roger\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\Sidebar.js":"3","C:\\Users\\Roger\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\GlobalStyles.js":"4","C:\\Users\\Roger\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\Bookmarks\\index.js":"5","C:\\Users\\Roger\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\TweetDetails\\index.js":"6","C:\\Users\\Roger\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\Notifications\\index.js":"7","C:\\Users\\Roger\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\CurrentUserContext.js":"8","C:\\Users\\Roger\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\HomeFeed\\index.js":"9","C:\\Users\\Roger\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\Profile\\index.js":"10","C:\\Users\\Roger\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\Tweet.js":"11","C:\\Users\\Roger\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\TweetDetails\\SingleTweet.js":"12","C:\\Users\\Roger\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\Profile\\ProfileTop.js":"13","C:\\Users\\Roger\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\HomeFeed\\TweetPost.js":"14"},{"size":1479,"mtime":1611363990465,"results":"15","hashOfConfig":"16"},{"size":313,"mtime":1611174468529,"results":"17","hashOfConfig":"16"},{"size":1861,"mtime":1611420908069,"results":"18","hashOfConfig":"16"},{"size":1757,"mtime":1611363555777,"results":"19","hashOfConfig":"16"},{"size":134,"mtime":1611083367045,"results":"20","hashOfConfig":"16"},{"size":1389,"mtime":1611278078979,"results":"21","hashOfConfig":"16"},{"size":146,"mtime":1611083341486,"results":"22","hashOfConfig":"16"},{"size":1336,"mtime":1611274319204,"results":"23","hashOfConfig":"16"},{"size":2243,"mtime":1611446703011,"results":"24","hashOfConfig":"16"},{"size":2594,"mtime":1611420959935,"results":"25","hashOfConfig":"16"},{"size":2687,"mtime":1611363246908,"results":"26","hashOfConfig":"16"},{"size":2242,"mtime":1611355634558,"results":"27","hashOfConfig":"16"},{"size":2408,"mtime":1611422430707,"results":"28","hashOfConfig":"16"},{"size":3813,"mtime":1611450965101,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1wo81xx",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Roger\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\App.js",["63","64"],"C:\\Users\\Roger\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\index.js",[],["65","66"],"C:\\Users\\Roger\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\Sidebar.js",[],"C:\\Users\\Roger\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\GlobalStyles.js",[],"C:\\Users\\Roger\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\Bookmarks\\index.js",[],"C:\\Users\\Roger\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\TweetDetails\\index.js",["67","68"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport SingleTweet from './SingleTweet';\r\n\r\n\r\nconst TweetDetails = () => {\r\n  const { tweetId } = useParams();\r\n  const [tweetDetails, setTweetDetails] = useState(null);\r\n  const [status, setStatus] = useState(\"loading\");\r\n\r\n  useEffect(() => {        \r\n    setStatus(\"loading\");   \r\n    fetch(`/api/tweet/${tweetId}`)\r\n    .then((res) => res.json())\r\n    .then((json) => {\r\n        \r\n        \r\n        if(json){\r\n          setTweetDetails({...json});\r\n          setStatus(\"idle\");\r\n         // console.log('Tweetjson', json.tweetIds);\r\n        }\r\n    \r\n    });\r\n  }   , []);\r\n\r\n\r\n    return (\r\n      <>\r\n      {tweetDetails === null ? <p>Tweet details....</p> : (\r\n        \r\n             <SingleTweet \r\n               key={tweetId}\r\n               id={tweetId}\r\n               handle={tweetDetails.tweet.author.handle}  \r\n               status={tweetDetails.tweet.status}\r\n               name={tweetDetails.tweet.author.displayName}\r\n               avatar={tweetDetails.tweet.author.avatarSrc} \r\n               date={tweetDetails.tweet.timestamp}\r\n               media={tweetDetails.tweet.media}\r\n               retweeted={tweetDetails.tweet.retweetFrom}\r\n               />         \r\n             \r\n           )\r\n       }\r\n      </>\r\n    );\r\n  };\r\n  \r\n  \r\n  export default TweetDetails;","C:\\Users\\Roger\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\Notifications\\index.js",[],"C:\\Users\\Roger\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\CurrentUserContext.js",[],"C:\\Users\\Roger\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\HomeFeed\\index.js",["69"],"C:\\Users\\Roger\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\Profile\\index.js",["70","71","72"],"import React, { useContext, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useParams } from 'react-router-dom';\r\nimport Tweet from '../Tweet';\r\nimport ProfileTop from './ProfileTop';\r\nimport { COLORS } from \"../GlobalStyles\";\r\n\r\nimport { CurrentUserContext } from '../CurrentUserContext';\r\n\r\nconst Profile = () => {\r\n  //const { currentUser, status } = useContext(CurrentUserContext);\r\n  const { profileId } = useParams();\r\n  const [profileTweets, setProfileTweets] = React.useState(null);\r\n  const [profileInfo, setProfileInfo] = React.useState(null);\r\n  const [status, setStatus] = React.useState(\"loading\");\r\n\r\n  \r\n\r\n  useEffect(() => {        \r\n    setStatus(\"loading\");   \r\n    fetch(`/api/${profileId}/profile`)\r\n    .then((res) => res.json())\r\n    .then((json) => {      \r\n     \r\n        if(json){\r\n          setProfileInfo({...json});\r\n          setStatus(\"idle\");\r\n          console.log('ProfileInfo', json);\r\n        }\r\n    \r\n    });\r\n  }   , [profileId]);\r\n\r\n  useEffect(() => {        \r\n    setStatus(\"loading\");   \r\n    fetch(`/api/${profileId}/feed`)\r\n    .then((res) => res.json())\r\n    .then((json) => {       \r\n        \r\n        if(json){\r\n          setProfileTweets({...json});\r\n          setStatus(\"idle\");\r\n     \r\n        }\r\n    \r\n    });\r\n  }   , [profileId]);\r\n\r\n  //   \r\n    return (\r\n      <Wrapper>\r\n        {profileTweets === null || profileInfo === null ? <p>....</p> : (\r\n        <>\r\n          <ProfileTop profileInfo={profileInfo.profile} /> \r\n          { profileTweets.tweetIds.map((tweet)=>{     \r\n              return (\r\n                <Tweet \r\n                  key={tweet}\r\n                  id={tweet}\r\n                  handle={profileTweets.tweetsById[tweet].author.handle}  \r\n                  status={profileTweets.tweetsById[tweet].status}\r\n                  name={profileTweets.tweetsById[tweet].author.displayName}\r\n                  avatar={profileTweets.tweetsById[tweet].author.avatarSrc} \r\n                  date={profileTweets.tweetsById[tweet].timestamp}\r\n                  media={profileTweets.tweetsById[tweet].media}\r\n                  retweeted={profileTweets.tweetsById[tweet].retweetFrom}\r\n                  />  \r\n                )\r\n            })     \r\n          }  \r\n       </> )}       \r\n    </Wrapper>    \r\n    );\r\n  };\r\n  \r\n  const Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column; \r\n    //padding: 0 20px 20px 20px;  \r\n    margin: 0 20px;\r\n    border-left: solid 1px ${COLORS.lightGrey}; \r\n    border-right: solid 1px ${COLORS.lightGrey}; \r\n    \r\n  `;\r\n  \r\n  export default Profile;",["73","74"],"C:\\Users\\Roger\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\Tweet.js",["75"],"C:\\Users\\Roger\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\TweetDetails\\SingleTweet.js",["76"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport moment from 'moment';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst SingleTweet = ({ id, handle, status, name, avatar, date, media, retweeted })=> { \r\n    const history = useHistory(); \r\n    const isMedia = media.length !== 0 && media[0].type === 'img' ? true : false;\r\n    const isRetweeted = retweeted ? true : false;\r\n\r\n    const onClickLink = (ev)=>{       \r\n        ev.preventDefault();\r\n        history.push(`/${handle}`);\r\n    };\r\n\r\n    return (                 \r\n            <WrapperContent>\r\n                <Top>\r\n                    < Avatar src={avatar} alt=\"avatar\" />\r\n                    <Identification>\r\n                        <p><Name onClick={onClickLink}><strong>{name}</strong></Name></p>\r\n                        <Handle >{`@${handle}`}</Handle >\r\n                    </Identification>\r\n                </Top>\r\n                <div> \r\n                    <Status>{status}</Status>\r\n                    {isMedia &&\r\n                    <Media src={media[0].url} alt=\"media\" /> }\r\n                    <Date>{ `${moment(date).format('h:mm A, MMM D YYYY')} - critter web app`}</Date>\r\n                </div>\r\n            </WrapperContent>\r\n       \r\n    );\r\n\r\n};\r\n\r\nconst Top = styled.div`\r\n    display: flex;\r\n   // cursor: pointer;  \r\n`;\r\n\r\nconst Identification = styled.div`\r\n    display: flex;\r\n    flex-direction:column;\r\n    justify-content:center; \r\n`;\r\n\r\nconst Name = styled.span`\r\n    &:hover {\r\n        cursor: pointer;  \r\n        text-decoration: underline;\r\n    }\r\n`;\r\n\r\nconst Handle = styled.p`\r\n    color: grey;\r\n    font-size: 14px;  \r\n`;\r\n\r\nconst Date = styled.p`\r\n    color: grey;\r\n    margin: 10px 0;\r\n    font-size: 14px;  \r\n    \r\n`;\r\n\r\nconst WrapperContent = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 15px 0 20px 0;   \r\n`;\r\n\r\nconst Avatar = styled.img`\r\n    width: 55px;\r\n    height: 55px;\r\n    border-radius: 50%;\r\n    margin-right: 15px;\r\n`;\r\n\r\nconst Media = styled.img`  \r\n    width: 100%;\r\n    height: 400px;   \r\n    object-fit: cover;\r\n    border-radius: 20px; \r\n`;\r\n\r\nconst Status = styled.p`\r\n    margin: 15px 0px;\r\n    font-size: 18px;  \r\n`;\r\n\r\n\r\nexport default SingleTweet;","C:\\Users\\Roger\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\Profile\\ProfileTop.js",[],"C:\\Users\\Roger\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\HomeFeed\\TweetPost.js",[],{"ruleId":"77","severity":1,"message":"78","line":12,"column":8,"nodeType":"79","messageId":"80","endLine":12,"endColumn":12},{"ruleId":"77","severity":1,"message":"81","line":17,"column":11,"nodeType":"79","messageId":"80","endLine":17,"endColumn":22},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"77","severity":1,"message":"86","line":10,"column":10,"nodeType":"79","messageId":"80","endLine":10,"endColumn":16},{"ruleId":"87","severity":1,"message":"88","line":26,"column":9,"nodeType":"89","endLine":26,"endColumn":11,"suggestions":"90"},{"ruleId":"77","severity":1,"message":"86","line":13,"column":10,"nodeType":"79","messageId":"80","endLine":13,"endColumn":16},{"ruleId":"77","severity":1,"message":"91","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":27},{"ruleId":"77","severity":1,"message":"92","line":8,"column":10,"nodeType":"79","messageId":"80","endLine":8,"endColumn":28},{"ruleId":"77","severity":1,"message":"86","line":15,"column":10,"nodeType":"79","messageId":"80","endLine":15,"endColumn":16},{"ruleId":"82","replacedBy":"93"},{"ruleId":"84","replacedBy":"94"},{"ruleId":"77","severity":1,"message":"95","line":13,"column":11,"nodeType":"79","messageId":"80","endLine":13,"endColumn":29},{"ruleId":"77","severity":1,"message":"96","line":10,"column":11,"nodeType":"79","messageId":"80","endLine":10,"endColumn":22},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'currentUser' is assigned a value but never used.","no-native-reassign",["97"],"no-negated-in-lhs",["98"],"'status' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tweetId'. Either include it or remove the dependency array.","ArrayExpression",["99"],"'useContext' is defined but never used.","'CurrentUserContext' is defined but never used.",["97"],["98"],"'onClickSingleTweet' is assigned a value but never used.","'isRetweeted' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},"Update the dependencies array to be: [tweetId]",{"range":"102","text":"103"},[673,675],"[tweetId]"]